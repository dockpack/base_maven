---

### Maven

- name: set maven_name
  set_fact:
    maven_name: "apache-maven-{{ maven_version }}"
  tags:
    - config
    - maven
    - test

- name: set maven_home
  set_fact:
    maven_home: "{{ maven_location }}/{{ maven_name }}"
  tags:
    - config
    - maven
    - test

- name: make sure directory for Maven exists
  file:
    dest: "{{ maven_home }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - maven

- name: verify presence of maven
  stat:
    path: "{{ maven_home }}/bin/mvn"
  register: mvn_installed
  tags:
    - config
    - maven

- name: install maven facts
  template:
    src: maven.fact
    dest: /etc/ansible/facts.d/maven.fact
    owner: root
    group: root
    mode: 0644
  tags:
    - config
    - maven

- name: reload local facts
  setup:
  tags:
    - config
    - test

- name: unarchive maven
  unarchive:
    src: "{{  maven_url }}"
    dest: "{{  maven_location }}"
    copy: no
  register: network_access
  until: network_access is success
  retries: 10
  delay: 2
  when: not mvn_installed.stat.exists
  tags:
    - maven

- name: fix maven permissions
  file:
    dest: "{{ maven_home }}/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - bin
    - boot
  tags:
    - config
    - maven

- name: make sure .m2 directory exists
  file:
    path: ".m2"
    mode: 0700
    state: directory
  tags:
    - config
    - maven

- name: make sure .m2 directory exists
  file:
    path: "{{ maven_location }}/.m2"
    owner: root
    group: root
    mode: 0750
    state: directory
  tags:
    - config
    - maven

- name: make sure /root/.m2 directory exists
  file:
    path: '/root/.m2'
    owner: root
    group: root
    mode: 0750
    state: directory
  tags:
    - config
    - maven

- name: Test for presence of maven
  environment:
    JAVA_HOME: "{{ java8_home }}"
  stat:
    path: "{{ maven_home }}/bin/mvn"
  tags:
    - config
    - maven
    - maven_test
    - test

- name: Test running maven --version
  environment:
    JAVA_HOME: "{{ java8_home }}"
  command: "{{ maven_home }}/bin/mvn --version"
  changed_when: no
  register: maven_version_out
  tags:
    - maven
    - maven_test
    - test

- name: display Maven version
  debug:
    msg: "molecule login{{ maven_version_out.stdout }}"

- name: check if maven settings-security has been set
  stat:
    path: '{{ maven_location }}/.m2/settings-security.xml'
  register: maven_setting_installed
  tags:
    - config
    - maven
    - maven_test
    - test

- name: create master password for Maven
  environment:
    JAVA_HOME: "{{ java8_home }}"
  command:
    "{{ maven_home }}/bin/mvn --encrypt-master-password {{ mvn_master_password | default(lookup('pipe','/usr/bin/openssl rand -base64 24')) }}"
  register: encrypted_mvn_password
  no_log: false
  when: not maven_setting_installed.stat.exists
  tags:
    - config
    - maven

- name: install settings-security.xml
  template:
    src: settings-security.xml
    dest: "{{ item.dir }}"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: 0600
  with_items:
    - dir: "{{ maven_location }}/.m2"
      owner: root
    - dir: "/root/.m2"
      owner: root
    - dir: ".m2"
      owner: "{{ ansible_user | default('root') }}"
  when: not maven_setting_installed.stat.exists
  tags:
    - config
    - maven

- name: create repository password for Maven
  environment:
    JAVA_HOME: "{{ java8_home }}"
  command: "{{ maven_home }}/bin/mvn --encrypt-password '{{ mvn_repo_password |default(omit) }}'"
  no_log: false
  register: mvn_repository_password
  when: not maven_setting_installed.stat.exists
  tags:
    - config
    - maven

- name: create settings.xml
  become: yes
  template:
    src: settings.xml
    dest: "{{ item.dir }}/settings.xml"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: 0644
  with_items:
    - dir: "{{ maven_location }}/.m2"
      owner: root
    - dir: "/root/.m2"
      owner: root
    - dir: ".m2"
      owner: "{{ ansible_user | default('root') }}"
  tags:
    - config
    - maven
  when: not maven_setting_installed.stat.exists

- name: install /etc/profile.d/maven.sh
  template:
    src: 'maven.sh.j2'
    dest: '/etc/profile.d/maven.sh'
    owner: root
    group: root
    mode: 0644
  tags:
    - config
    - maven

- name: ensure directory exists
  file:
    path: /root
    state: directory
    owner: root
    group: root
    mode: 0700
  tags:
    - maven

- name: copy goss tests template
  template:
    src: test_maven.yml.j2
    dest: /root/test_maven.yml
  tags:
    - maven
