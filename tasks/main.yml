---

### Maven

- name: set maven_name
  set_fact:
    maven_name: "apache-maven-{{ maven_version }}"
  tags:
    - config
    - maven
    - test

- name: set maven_home
  set_fact:
    maven_home: "{{ maven_location }}/{{ maven_name }}"
  tags:
    - config
    - maven
    - test

- name: 'make sure directory for Maven exists'
  file:
    dest: "{{ maven_home }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  tags:
    - maven

- name: 'verify presence of maven'
  stat:
    path: "{{ maven_home }}/bin/mvn"
  register: mvn_installed
  when: features.maven
  tags:
    - config
    - maven

- name: 'install maven facts'
  template:
    src: maven.fact
    dest: /etc/ansible/facts.d/maven.fact
    owner: root
    group: root
    mode: 0644
  tags:
    - config
    - maven

- name: 'reload local facts'
  setup:
  tags:
    - config
    - test

- name: 'unarchive maven'
  unarchive:
    src: "{{  maven_url }}"
    dest: "{{  maven_location }}"
    copy: no
  retries: 3
  when: not mvn_installed.stat.exists
  tags:
    - maven

- name: 'fix maven permissions'
  file:
    dest: "{{ maven_home }}/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - bin
    - boot
  when: features.maven
  tags:
    - config
    - maven

- name: 'make sure .m2 directory exists'
  file:
    path: "{{ maven_location }}/.m2"
    owner: root
    group: root
    mode: 0750
    state: directory
  when: features.maven
  tags:
    - config
    - maven

- name: 'make sure /root/.m2 directory exists'
  file:
    path: '/root/.m2'
    owner: root
    group: root
    mode: 0750
    state: directory
  when: features.maven
  tags:
    - config
    - maven

- name: 'Test for presence of maven'
  environment:
    JAVA_HOME: "{{ java8_home }}"
  stat:
    path: "{{ maven_home }}/bin/mvn"
  tags:
    - config
    - maven
    - maven_test
    - test

- name: 'Test running maven --version'
  environment:
    JAVA_HOME: "{{ java8_home }}"
  command: "{{ maven_home }}/bin/mvn --version"
  changed_when: no
  tags:
    - maven
    - maven_test
    - test

- name: 'check if settings-security has been set'
  environment:
    JAVA_HOME: "{{ java8_home }}"
  stat:
    path: "{{ maven_home }}/bin/ant"
  register: maven_setting_installed
  tags:
    - config
    - maven
    - maven_test
    - test

- name: 'create master password for Maven'
  become: yes
  environment:
    JAVA_HOME: "{{ java8_home }}"
  command:
    "{{ maven_home }}/bin/mvn --encrypt-master-password {{ mvn_master_password }}"
  register: encrypted_mvn_password
  when: not maven_setting_installed
  tags:
    - config
    - maven

- name: 'install settings-security.xml'
  become: yes
  template:
    src: settings-security-xml
    dest: '/root/.m2/settings-security.xml'
    mode: 0600
    owner: root
    group: root
  when: not maven_setting_installed
  tags:
    - config
    - maven

- name: 'create repository password for Maven'
  become: yes
  environment:
    JAVA_HOME: "{{ java8_home }}"
  command: "{{ maven_home }}/bin/mvn --encrypt-password {{ mvn_repo_password }}"
  register: mvn_repository_password
  when: not maven_setting_installed
  tags:
    - config
    - maven

- name: 'create settings.xml'
  become: yes
  template:
    src: settings_xml
    dest: "{{ maven_location }}/.m2/settings.xml"
    owner: root
    mode: 0644
  tags:
    - config
    - maven
  when: not maven_setting_installed

- name: 'install /etc/profile.d/maven.sh'
  template:
    src: 'etc-profile-d-maven-sh'
    dest: '/etc/profile.d/maven.sh'
    owner: root
    group: root
    mode: 0644
  when: features.maven
  tags:
    - config
    - maven
